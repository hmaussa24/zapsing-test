"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import environ
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# Env
env = environ.Env(
    DJANGO_DEBUG=(bool, True),
)
environ.Env.read_env(os.path.join(BASE_DIR, '.env'))

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('DJANGO_SECRET_KEY', default='insecure-dev-key')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env('DJANGO_DEBUG', default=True)

ALLOWED_HOSTS = env.list('ALLOWED_HOSTS', default=['127.0.0.1', 'localhost'])


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'drf_spectacular',
    'modules.company.infrastructure.django_app',
    'modules.document.infrastructure.django_app',
    'modules.signer.infrastructure.django_app',
    'modules.analysis.infrastructure.django_app',
    'modules.automation.infrastructure.django_app',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': env.db('DATABASE_URL', default=f"sqlite:///{BASE_DIR / 'db.sqlite3'}"),
}

# DRF / OpenAPI
REST_FRAMEWORK = {
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
    'DEFAULT_PAGINATION_CLASS': 'config.pagination.DefaultPageNumberPagination',
    'PAGE_SIZE': 10,
}

SPECTACULAR_SETTINGS = {
    'TITLE': 'ZapSign API',
    'DESCRIPTION': 'API para gesti√≥n de Companies, Documents y Signers',
    'VERSION': '1.0.0',
    'COMPONENT_SPLIT_REQUEST': True,
}

# ZapSign
ZAPSIGN_API_BASE = env('ZAPSIGN_API_BASE', default='')
ZAPSIGN_AUTH_SCHEME = env('ZAPSIGN_AUTH_SCHEME', default='Bearer')
ZAPSIGN_DEFAULT_SIGNER_NAME = env('ZAPSIGN_DEFAULT_SIGNER_NAME', default='Default Signer')
ZAPSIGN_DEFAULT_SIGNER_EMAIL = env('ZAPSIGN_DEFAULT_SIGNER_EMAIL', default='dev+signer@example.com')

# Automation / n8n
AUTOMATION_API_KEY = env('AUTOMATION_API_KEY', default='')
N8N_WEBHOOK_URL = env('N8N_WEBHOOK_URL', default='')

# Queue (RabbitMQ)
RABBITMQ_URL = env('RABBITMQ_URL', default='amqp://zapsign:zapsign@localhost:5672//')
AUTOMATION_QUEUE = env('AUTOMATION_QUEUE', default='document_created')
START_AUTOMATION_WORKER = env.bool('START_AUTOMATION_WORKER', default=False)


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGGING = {
  'version': 1,
  'disable_existing_loggers': False,
  'handlers': {'console': {'class': 'logging.StreamHandler'}},
  'root': {'handlers': ['console'], 'level': 'INFO'},
  'loggers': {
    'modules.automation.infrastructure.adapters.rabbitmq_publisher': {'handlers': ['console'], 'level': 'DEBUG', 'propagate': False},
    'modules.automation.infrastructure.worker': {'handlers': ['console'], 'level': 'DEBUG', 'propagate': False},
  },
}
